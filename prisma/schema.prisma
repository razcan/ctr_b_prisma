// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// npx prisma migrate dev --name init

generator nestjsDto {
  provider                        = "prisma-generator-nestjs-dto"
  output                          = "../src"
  outputToNestJsResourceStructure = "true"
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  name     String?
  email    String  @unique
  password String
  role     Role    @default(USER)
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique
}

model Department {
  id   Int    @id @default(autoincrement())
  name String @unique
}

model Cashflow {
  id   Int    @id @default(autoincrement())
  name String @unique
}

model Item {
  id   Int    @id @default(autoincrement())
  name String @unique
}

model CostCenter {
  id   Int    @id @default(autoincrement())
  name String @unique
}

model Entity {
  id   Int    @id @default(autoincrement())
  name String @unique
}

enum Role {
  USER
  ADMIN
}

model Contracts {
  id          Int                @id @default(autoincrement())
  number      String
  type        String
  status      String
  start       DateTime
  end         DateTime
  sign        DateTime
  completion  DateTime
  remarks     String
  category    String             @default("import")
  departament String             @default("default")
  cashflow    String             @default("default")
  item        String             @default("default")
  costcenter  String             @default("default")
  entity      String             @default("default")
  contract    ContractsDetails[]
  partner     Partners?          @relation(fields: [partnersId], references: [id])
  partnersId  Int?
}

model ContractsDetails {
  id         Int       @id @default(autoincrement())
  name       String
  itemid     Int
  contract   Contracts @relation(fields: [contractId], references: [id])
  contractId Int
}

model Partners {
  id             Int         @id @default(autoincrement())
  updateadAt     DateTime    @updatedAt
  createdAt      DateTime    @default(now())
  name           String
  fiscal_code    String
  commercial_reg String
  state          String
  type           String
  email          String
  remarks        String
  contractsId    Int?
  Contracts      Contracts[]
  Persons        Persons[]
  Address        Address[]
  Banks          Banks[]
}

model Persons {
  id             Int      @id @default(autoincrement())
  updateadAt     DateTime @updatedAt
  createdAt      DateTime @default(now())
  name           String
  phone          String?
  email          String?
  legalrepresent Boolean?
  role           String?
  partner        Partners @relation(fields: [partnerId], references: [id])
  partnerId      Int
}

model Address {
  id              Int      @id @default(autoincrement())
  updateadAt      DateTime @updatedAt
  createdAt       DateTime @default(now())
  addressName     String?
  addressType     String?
  Country         String?
  County          String?
  City            String?
  Street          String?
  Number          String?
  postalCode      String?
  Status          String?
  Default         String?
  aggregate       String?
  completeAddress String?
  partner         Partners @relation(fields: [partnerId], references: [id])
  partnerId       Int
}

model Banks {
  id         Int      @id @default(autoincrement())
  updateadAt DateTime @updatedAt
  createdAt  DateTime @default(now())
  bank       String?
  currency   String?
  branch     String?
  iban       String?
  status     String?
  partner    Partners @relation(fields: [partnerId], references: [id])
  partnerId  Int
}
